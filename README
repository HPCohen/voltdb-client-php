# PHP VoltDB Client Library

The PHP VoltDB client library allows connecting to a VoltDB cluster, invoking
stored procedures and reading responses from a PHP 5.3 application.

The binary file provided is compiled for PHP 5.3 or above on 64-bit Linux. To
use the library on other platforms, it currently must be built from source.

## Installation

Copy the VoltDB PHP extension (voltdb.so) to your PHP extension
library (specified in your php.ini file).

Edit your php.ini file to load the VoltDB extension:

    extension=voltdb.so

Note that if you are running PHP through a web server such as Apache
(instead of command line), you will have to restart/reload the server
for the new php.ini changes to take effect.

## Running

With the extension loaded into PHP, include the voltdb.php file
at the top of your script. This file contains proxy classes for
interacting with a VoltDB server.

Look at the examples directory to see how to use the PHP wrapper.

## Known Issues

This wrapper is still in its development phase, so a few features are
not fully supported. This includes:

  * Parameters arrays
    Arrays of parameters are supported using vector wrappers, but they
    aren't tested.

  * int64_t and Decimal: int64_t doesn't work because PHP doesn't
    support 64-bit integers. Decimal isn't tested.

  * Retrieving results When extracting data out of an
    InvocationResponse object, you must explicitly create a variable
    to hold the results object. For example, this is valid:

        $results = $response->results();
        $row = $results->get(0)->iterator()->next();

    Whereas this is not:

        $row = $response->results()->get(0)->iterator()->next();

    If you chain the method calls together like above, the variable
    returned by results() gets garbage collected too early. See
    CLIENTAPI-15 for the progress of this bug.

  * Uncaught exception handler The handler is provided the wrong
    procedure callback when it is invoked. See
    https://issues.voltdb.com/browse/CLIENTAPI-33
